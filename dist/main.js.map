{"version":3,"file":"main.js","mappings":"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","sources":["webpack://card-games/webpack/bootstrap","webpack://card-games/webpack/runtime/define property getters","webpack://card-games/webpack/runtime/hasOwnProperty shorthand","webpack://card-games/./src/routes.js","webpack://card-games/./src/script.js","webpack://card-games/./src/components/start-page-component.js","webpack://card-games/./src/components/easy-page-component.js","webpack://card-games/./src/components/medium-page-component.js","webpack://card-games/./src/components/hard-page-component.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Файл со списком страниц приложения\nexport const EASY_PAGE = 'easy';\nexport const MEDIUM_PAGE = 'medium';\nexport const HARD_PAGE = 'hard';\nexport const START_PAGE = 'start';\nexport const END_PAGE = 'end';\nimport css from \"/src/styles.css\";\n","import { renderEasyPageComponent } from './components/easy-page-component.js';\nimport { renderHardPageComponent } from './components/hard-page-component.js';\nimport { renderMediumPageComponent } from './components/medium-page-component.js';\nimport { renderStartPageComponent } from './components/start-page-component.js';\nimport {\n    START_PAGE, //начальная страница\n    END_PAGE, //финальная страница\n    EASY_PAGE, //легкий уровеень\n    MEDIUM_PAGE, //легкий уровеень\n    HARD_PAGE, //легкий уровеень\n} from './routes.js';\n\n\nexport let page = null;\n\n/**\n * Включает страницу приложения\n * с нее начинается работа приложения\n */\nexport const goToPage = (newPage) => {\n    if (\n        [START_PAGE, END_PAGE, EASY_PAGE, MEDIUM_PAGE, HARD_PAGE].includes(\n            newPage\n        )\n    ) {\n        if (newPage === START_PAGE) {\n            renderApp();\n        }\n\n        page = newPage;\n        renderApp();\n\n        return;\n    }\n\n    throw new Error('страницы не существует');\n};\n\n// отрисовывает посты\nconst renderApp = () => {\n    const appEl = document.getElementById('app');\n\n    if (page === START_PAGE) {\n        return renderStartPageComponent({\n            appEl,\n        });\n    }\n\n    if (page === EASY_PAGE) {\n        return renderEasyPageComponent({\n            appEl,\n        });\n    }\n\n    if (page === MEDIUM_PAGE) {\n        return renderMediumPageComponent({\n            appEl,\n        });\n    }\n\n    if (page === HARD_PAGE) {\n        return renderHardPageComponent({\n            appEl,\n        });\n    }\n};\n\n// вызов-функция\ngoToPage(START_PAGE);\n\nconsole.log('It works!');\n","// const levels = [\n//     {\n//         name: 1,\n//         active: false,\n//     },\n//     {\n//         name: 2,\n//         active: false,\n//     },\n//     {\n//         name: 3,\n//         active: false,\n//     },\n// ];\n\nimport { EASY_PAGE, HARD_PAGE, MEDIUM_PAGE } from '../routes.js';\nimport { goToPage } from '../script.js';\n\nexport function renderStartPageComponent({ appEl }) {\n    const startWindowHtml = `\n        <div class=\"window center\">\n            <div class=\"window__title\">Выбери сложность</div>\n            <div class=\"window__level\">\n                <div class=\"window__level-button\">\n                    <input id=\"radio-1\" type=\"radio\" name=\"radio\" value=\"1\" checked>\n                    <label for=\"radio-1\">1</label>\n                </div>\n                <div class=\"window__level-button\">\n                    <input id=\"radio-2\" type=\"radio\" name=\"radio\" value=\"2\">\n                    <label for=\"radio-2\">2</label>\n                </div>\n                <div class=\"window__level-button\">\n                    <input id=\"radio-3\" type=\"radio\" name=\"radio\" value=\"3\">\n                    <label for=\"radio-3\">3</label>\n                </div>\n            </div>\n            <div>\n                <button id=\"game__button\" class=\"game__button\">Старт</button>\n            </div>\n        </div>`;\n\n    appEl.innerHTML = startWindowHtml;\n\n    // Выбираем сложность уровня\n\n    function levelSelection() {\n        const buttonElement = document.getElementById('game__button');\n\n        buttonElement.addEventListener('click', () => {\n            function levels() {\n                let level = document.getElementsByName('radio');\n                for (var i = 0; i < level.length; i++) {\n                    if (level[i].checked) {\n                        console.log('Выбран ' + Number(i + 1) + ' уровень');\n                        if (i === 0) {\n                            goToPage(EASY_PAGE);\n                        } else if (i === 1) {\n                            goToPage(MEDIUM_PAGE);\n                        } else if (i === 2) {\n                            goToPage(HARD_PAGE);\n                        }\n                    }\n                }\n            }\n\n            levels();\n        });\n    }\n\n    levelSelection();\n}\n","import { START_PAGE } from '../routes.js';\nimport { goToPage } from '../script.js';\n\nexport function renderEasyPageComponent({ appEl }) {\n    const cards = [\n        '6spades',\n        '7spades',\n        '8spades',\n        '9spades',\n        '10spades',\n        'Jspades',\n        'Qspades',\n        'Kspades',\n        'Aspades',\n        '6clubs',\n        '7clubs',\n        '8clubs',\n        '9clubs',\n        '10clubs',\n        'Jclubs',\n        'Qclubs',\n        'Kclubs',\n        'Aclubs',\n        '6hearts',\n        '7hearts',\n        '8hearts',\n        '9hearts',\n        '10hearts',\n        'Jhearts',\n        'Qhearts',\n        'Khearts',\n        'Ahearts',\n        '6diamonds',\n        '7diamonds',\n        '8diamonds',\n        '9diamonds',\n        '10diamonds',\n        'Jdiamonds',\n        'Qdiamonds',\n        'Kdiamonds',\n        'Adiamonds',\n    ];\n\n    let gameCards = cards\n        .sort(() => Math.random() - 0.5)\n        .slice(-3)\n        .join(' ')\n        .concat(' ')\n        .repeat(2)\n        .slice(0, -1)\n        .split(' ')\n        .sort(() => Math.random() - 0.5);\n    console.log(gameCards);\n\n    const cardHTML = gameCards\n        .map((card, index) => {\n            console.log(`img src=\"./${card}.svg\"/`);\n            return `\n                <img class=\"game__card\" data-index=${index} src=\"./img/shirt.svg\" alt=\"рубашка\" />\n                `;\n        })\n        .join('');\n\n    const windowHtml = `\n            <div class=\"game-header\">\n                <div class=\"game-header__timer\">\n                    <div class=\"game-header__timer_header\">\n                        <p class=\"game-header__timer_header-item\">min</p>\n                        <p class=\"game-header__timer_header-item\">sec</p>\n                    </div>\n                    <div class=\"game-header__timer_time\" id=\"countdown\">00:00</div>\n                </div>\n                <div class=\"game-header__restart\">\n                    <button class=\"restart__button\">Начать заново</button>\n                </div>\n            </div>\n            <div class=\"game__field\">\n                ${cardHTML}\n            </div>`;\n\n    appEl.innerHTML = windowHtml;\n\n    let time = 0;\n    const countDownElement = document.getElementById('countdown');\n    setInterval(updateCountdown, 1000);\n    function updateCountdown() {\n        let minutes = Math.floor(time / 60);\n        let seconds = time % 60;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        seconds = seconds < 10 ? '0' + seconds : seconds;\n        countDownElement.innerHTML = `${minutes}:${seconds}`;\n        time++;\n    }\n\n    const buttonRestartGame = document.querySelector('.restart__button');\n    buttonRestartGame.addEventListener('click', () => {\n        goToPage(START_PAGE);\n    });\n\n    const cardOpeningUser = () => {\n        const buttonCardElements = document.querySelectorAll('.game__card');\n        for (let buttonCardElement of buttonCardElements) {\n            buttonCardElement.addEventListener('click', (event) => {\n                event.stopPropagation();\n                const index = buttonCardElement.dataset.index;\n                console.log(gameCards[index]);\n                buttonCardElement.src = `./img/${gameCards[index]}.svg`;\n            });\n        }\n    };\n\n    cardOpeningUser();\n}\n","import { START_PAGE } from '../routes.js';\nimport { goToPage } from '../script.js';\n\nexport function renderMediumPageComponent({ appEl }) {\n    const cards = [\n        '6spades',\n        '7spades',\n        '8spades',\n        '9spades',\n        '10spades',\n        'Jspades',\n        'Qspades',\n        'Kspades',\n        'Aspades',\n        '6clubs',\n        '7clubs',\n        '8clubs',\n        '9clubs',\n        '10clubs',\n        'Jclubs',\n        'Qclubs',\n        'Kclubs',\n        'Aclubs',\n        '6hearts',\n        '7hearts',\n        '8hearts',\n        '9hearts',\n        '10hearts',\n        'Jhearts',\n        'Qhearts',\n        'Khearts',\n        'Ahearts',\n        '6diamonds',\n        '7diamonds',\n        '8diamonds',\n        '9diamonds',\n        '10diamonds',\n        'Jdiamonds',\n        'Qdiamonds',\n        'Kdiamonds',\n        'Adiamonds',\n    ];\n\n    let gameCards = cards\n        .sort(() => Math.random() - 0.5)\n        .slice(-6)\n        .join(' ')\n        .concat(' ')\n        .repeat(2)\n        .slice(0, -1)\n        .split(' ')\n        .sort(() => Math.random() - 0.5);\n    console.log(gameCards);\n\n    const cardHTML = gameCards\n        .map((card, index) => {\n            console.log(`img src=\"./${card}.svg\"/`);\n            return `\n                <img class=\"game__card\" data-index=${index} src=\"./img/shirt.svg\" alt=\"рубашка\" />\n                `;\n        })\n        .join('');\n\n    const windowHtml = `\n            <div class=\"game-header\">\n                <div class=\"game-header__timer\">\n                    <div class=\"game-header__timer_header\">\n                        <p class=\"game-header__timer_header-item\">min</p>\n                        <p class=\"game-header__timer_header-item\">sec</p>\n                    </div>\n                    <div class=\"game-header__timer_time\" id=\"countdown\">00:00</div>\n                </div>\n                <div class=\"game-header__restart\">\n                    <button class=\"restart__button\">Начать заново</button>\n                </div>\n            </div>\n            <div class=\"game__field\">\n                ${cardHTML}\n            </div>`;\n\n    appEl.innerHTML = windowHtml;\n\n    let time = 0;\n    const countDownElement = document.getElementById('countdown');\n    setInterval(updateCountdown, 1000);\n    function updateCountdown() {\n        let minutes = Math.floor(time / 60);\n        let seconds = time % 60;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        seconds = seconds < 10 ? '0' + seconds : seconds;\n        countDownElement.innerHTML = `${minutes}:${seconds}`;\n        time++;\n    }\n\n    const buttonRestartGame = document.querySelector('.restart__button');\n    buttonRestartGame.addEventListener('click', () => {\n        goToPage(START_PAGE);\n    });\n\n    const cardOpeningUser = () => {\n        const buttonCardElements = document.querySelectorAll('.game__card');\n        for (let buttonCardElement of buttonCardElements) {\n            buttonCardElement.addEventListener('click', (event) => {\n                event.stopPropagation();\n                const index = buttonCardElement.dataset.index;\n                console.log(gameCards[index]);\n                buttonCardElement.src = `./img/${gameCards[index]}.svg`;\n            });\n        }\n    };\n\n    cardOpeningUser();\n}\n","import { START_PAGE } from '../routes.js';\nimport { goToPage } from '../script.js';\n\nexport function renderHardPageComponent({ appEl }) {\n    const cards = [\n        '6spades',\n        '7spades',\n        '8spades',\n        '9spades',\n        '10spades',\n        'Jspades',\n        'Qspades',\n        'Kspades',\n        'Aspades',\n        '6clubs',\n        '7clubs',\n        '8clubs',\n        '9clubs',\n        '10clubs',\n        'Jclubs',\n        'Qclubs',\n        'Kclubs',\n        'Aclubs',\n        '6hearts',\n        '7hearts',\n        '8hearts',\n        '9hearts',\n        '10hearts',\n        'Jhearts',\n        'Qhearts',\n        'Khearts',\n        'Ahearts',\n        '6diamonds',\n        '7diamonds',\n        '8diamonds',\n        '9diamonds',\n        '10diamonds',\n        'Jdiamonds',\n        'Qdiamonds',\n        'Kdiamonds',\n        'Adiamonds',\n    ];\n\n    let gameCards = cards\n        .sort(() => Math.random() - 0.5)\n        .slice(-9)\n        .join(' ')\n        .concat(' ')\n        .repeat(2)\n        .slice(0, -1)\n        .split(' ')\n        .sort(() => Math.random() - 0.5);\n    console.log(gameCards);\n\n    const cardHTML = gameCards\n        .map((card, index) => {\n            console.log(`img src=\"./${card}.svg\"/`);\n            return `\n                <img class=\"game__card\" data-index=${index} src=\"./img/shirt.svg\" alt=\"рубашка\" />\n                `;\n        })\n        .join('');\n\n    const windowHtml = `\n            <div class=\"game-header\">\n                <div class=\"game-header__timer\">\n                    <div class=\"game-header__timer_header\">\n                        <p class=\"game-header__timer_header-item\">min</p>\n                        <p class=\"game-header__timer_header-item\">sec</p>\n                    </div>\n                    <div class=\"game-header__timer_time\" id=\"countdown\">00:00</div>\n                </div>\n                <div class=\"game-header__restart\">\n                    <button class=\"restart__button\">Начать заново</button>\n                </div>\n            </div>\n            <div class=\"game__field\">\n                ${cardHTML}\n            </div>`;\n\n    appEl.innerHTML = windowHtml;\n\n    let time = 0;\n    const countDownElement = document.getElementById('countdown');\n    setInterval(updateCountdown, 1000);\n    function updateCountdown() {\n        let minutes = Math.floor(time / 60);\n        let seconds = time % 60;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        seconds = seconds < 10 ? '0' + seconds : seconds;\n        countDownElement.innerHTML = `${minutes}:${seconds}`;\n        time++;\n    }\n\n    const buttonRestartGame = document.querySelector('.restart__button');\n    buttonRestartGame.addEventListener('click', () => {\n        goToPage(START_PAGE);\n    });\n\n    const cardOpeningUser = () => {\n        const buttonCardElements = document.querySelectorAll('.game__card');\n        for (let buttonCardElement of buttonCardElements) {\n            buttonCardElement.addEventListener('click', (event) => {\n                event.stopPropagation();\n                const index = buttonCardElement.dataset.index;\n                console.log(gameCards[index]);\n                buttonCardElement.src = `./img/${gameCards[index]}.svg`;\n            });\n        }\n    };\n\n    cardOpeningUser();\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","EASY_PAGE","MEDIUM_PAGE","HARD_PAGE","START_PAGE","END_PAGE","page","goToPage","newPage","includes","renderApp","Error","appEl","document","getElementById","innerHTML","addEventListener","level","getElementsByName","i","length","checked","console","log","Number","levels","renderStartPageComponent","gameCards","sort","Math","random","slice","join","concat","repeat","split","windowHtml","map","card","index","time","countDownElement","setInterval","minutes","floor","seconds","querySelector","buttonCardElements","querySelectorAll","buttonCardElement","event","stopPropagation","dataset","src","cardOpeningUser","renderEasyPageComponent","renderMediumPageComponent","renderHardPageComponent"],"sourceRoot":""}